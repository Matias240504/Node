<!DOCTYPE html>
<html lang="es">
<head>
    <%- include('./partials/styles', {title: 'Casos del Abogado'}) %>
    <style>
        /* Estilos específicos para la página de casos */
        .btn-detalle {
            padding: 5px 10px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.85rem;
        }
        
        .btn-detalle:hover {
            background-color: var(--primary-dark-color);
        }
        .filters-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 20px;
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 8px;
        }
        
        .filter-item {
            display: flex;
            flex-direction: column;
        }
        
        .filter-item label {
            font-size: 0.85rem;
            margin-bottom: 5px;
            color: var(--text-secondary-color);
        }
        
        .filter-item select,
        .filter-item input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
        }
        
        .filter-actions {
            display: flex;
            align-items: flex-end;
            gap: 10px;
        }
        
        .filter-actions button {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }
        
        .apply-filter {
            background-color: var(--primary-color);
            color: white;
        }
        
        .reset-filter {
            background-color: #f0f0f0;
            color: var(--text-color);
        }
        
        /* Paginación */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
        }
        
        .pagination button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background-color: white;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .pagination button:hover:not(:disabled) {
            background-color: var(--light-color);
        }
        
        .pagination button.active {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }
        
        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        /* Estado de carga */
        .loading-indicator {
            display: none;
            justify-content: center;
            margin: 20px 0;
        }
        
        .loading-indicator.active {
            display: flex;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-left-color: var(--primary-color);
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Contador de resultados */
        .results-counter {
            margin-bottom: 15px;
            font-size: 0.9rem;
            color: var(--text-secondary-color);
        }
        
        /* Modal para mostrar detalles del caso */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
        }
        
        .modal-overlay.active {
            display: flex;
        }
        
        .modal-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 80%;
            max-width: 600px;
            display: none;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 1.2rem;
            font-weight: 600;
        }
        
        .modal-close {
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        .modal-body {
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <%- include('./partials/sidebar', {currentPath: '/abogado/dashboard'}) %>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="page-header">
                <h2 class="page-title">Casos Asignados</h2>
                <div>
                    <span id="currentDate"></span>
                </div>
            </div>
            
            <!-- Filtros -->
            <div class="filters-container">
                <div class="filter-item">
                    <label for="estado-filter">Estado</label>
                    <select id="estado-filter">
                        <option value="">Todos</option>
                        <option value="enviado">Enviado</option>
                        <option value="aceptado">Aceptado</option>
                        <option value="denegado">Denegado</option>
                        <option value="iniciado">Iniciado</option>
                        <option value="finalizado">Finalizado</option>
                    </select>
                </div>
                
                <div class="filter-item">
                    <label for="tipo-filter">Tipo de Caso</label>
                    <select id="tipo-filter">
                        <option value="">Todos</option>
                        <option value="divorcio">Divorcio</option>
                        <option value="contrato_laboral">Contrato Laboral</option>
                        <option value="propiedad_intelectual">Propiedad Intelectual</option>
                        <option value="herencia">Herencia</option>
                        <option value="inmobiliario">Inmobiliario</option>
                        <option value="inscripcion">Inscripción</option>
                        <option value="otro">Otro</option>
                    </select>
                </div>
                
                <div class="filter-item">
                    <label for="busqueda">Buscar</label>
                    <input type="text" id="busqueda" placeholder="Expediente, título...">
                </div>
                
                <div class="filter-actions">
                    <button class="apply-filter" id="apply-filters">
                        <i class="fas fa-search"></i> Aplicar Filtros
                    </button>
                    <button class="reset-filter" id="reset-filters">
                        <i class="fas fa-undo"></i> Restablecer
                    </button>
                </div>
            </div>
            
            <div class="results-counter" id="results-counter">Mostrando 0 casos</div>
            
            <!-- Indicador de carga -->
            <div class="loading-indicator" id="loading-indicator">
                <div class="spinner"></div>
            </div>
            
            <!-- Tabla de Casos -->
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Caso #</th>
                            <th>Cliente</th>
                            <th>Tipo</th>
                            <th>Fecha de Inicio</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="casos-tbody">
                        <!-- Los datos se cargarán dinámicamente con JavaScript -->
                    </tbody>
                </table>
            </div>
            
            <!-- Paginación -->
            <div class="pagination" id="pagination">
                <!-- Los elementos de paginación se generarán dinámicamente -->
            </div>
        </div>
    </div>
    
    <!-- Modal para mostrar detalles del caso -->
    <div class="modal-overlay" id="modalOverlay">
        <div class="modal-container">
            <div class="modal-header">
                <h3 class="modal-title">Detalles del Caso</h3>
                <button class="modal-close" onclick="cerrarModal()">&times;</button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Los detalles del caso se cargarán aquí -->
            </div>
        </div>
    </div>
    
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <!-- Scripts base -->
    <script>
        // Mostrar fecha actual
        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
        const today = new Date();
        document.getElementById('currentDate').textContent = today.toLocaleDateString('es-ES', options);
        
        // Manejar el cierre de sesión
        document.getElementById('logoutBtn').addEventListener('click', function () {
            localStorage.removeItem('token');
            localStorage.removeItem('userName');
            localStorage.removeItem('userRole');
            localStorage.removeItem('userId');
            document.cookie = 'token=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT; secure; samesite=strict';
            window.location.href = '/auth/login';
        });
        
        // Marcar enlace activo
        document.addEventListener('DOMContentLoaded', function() {
            const rutaActual = window.location.pathname;
            document.querySelectorAll('.sidebar-menu a').forEach(enlace => {
                enlace.classList.remove('active');
                if (enlace.getAttribute('href') === rutaActual) {
                    enlace.classList.add('active');
                }
            });
        });
    </script>
    
    <!-- Script específico para la página de casos -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Referencias a elementos DOM
            const casosTableBody = document.getElementById('casos-tbody');
            const paginationContainer = document.getElementById('pagination');
            const loadingIndicator = document.getElementById('loading-indicator');
            const resultsCounter = document.getElementById('results-counter');
            
            // Elementos de filtro
            const estadoFilter = document.getElementById('estado-filter');
            const tipoFilter = document.getElementById('tipo-filter');
            const busquedaInput = document.getElementById('busqueda');
            const applyFiltersBtn = document.getElementById('apply-filters');
            const resetFiltersBtn = document.getElementById('reset-filters');
            
            // Variables para la paginación
            let currentPage = 1;
            const limit = 10;
            
            // Función para obtener el token de las cookies
            function obtenerTokenDeCookie() {
                const cookieValue = document.cookie
                    .split('; ')
                    .find(row => row.startsWith('token='));
                return cookieValue ? cookieValue.split('=')[1] : null;
            }
            
            // Nueva función para renderizar casos con acciones
            function renderizarCasos(casos) {
                // Limpiar tabla
                casosTableBody.innerHTML = '';

                if (casos && casos.length > 0) {
                    casos.forEach(caso => {
                        // Determinar clase CSS para estado
                        let statusClass = '';
                        switch(caso.estado) {
                            case 'iniciado':
                            case 'aceptado':
                                statusClass = 'text-success';
                                break;
                            case 'rechazado':
                                statusClass = 'text-danger';
                                break;
                            default:
                                statusClass = 'text-warning';
                        }

                        // Crear fila de la tabla
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${caso.numeroExpediente || 'N/A'}</td>
                            <td>${caso.clienteId ? caso.clienteId.nombre + ' ' + caso.clienteId.apellido : 'No asignado'}</td>
                            <td>${caso.tipo || 'Desconocido'}</td>
                            <td>${new Date(caso.fechaRegistro).toLocaleDateString() || 'N/A'}</td>
                            <td class="${statusClass}">${caso.estado || 'Desconocido'}</td>
                            <td>
                                <button class="btn btn-info" onclick="abrirDetalleCaso('${caso._id}')">Acciones</button>
                            </td>
                        `;
                        casosTableBody.appendChild(row);
                    });
                } else {
                    casosTableBody.innerHTML = `
                        <tr>
                            <td colspan="6" style="text-align: center;">No se encontraron casos.</td>
                        </tr>
                    `;
                }
            }

            // Event listeners para los filtros
            applyFiltersBtn.addEventListener('click', () => {
                currentPage = 1; // Resetear a la primera página al aplicar filtros
                cargarCasos(currentPage);
            });
            
            resetFiltersBtn.addEventListener('click', () => {
                // Limpiar filtros
                estadoFilter.value = '';
                tipoFilter.value = '';
                busquedaInput.value = '';
                
                // Cargar casos sin filtros
                currentPage = 1;
                cargarCasos(currentPage);
            });
            
            // Permitir filtrar al presionar Enter en el campo de búsqueda
            busquedaInput.addEventListener('keyup', (event) => {
                if (event.key === 'Enter') {
                    currentPage = 1;
                    cargarCasos(currentPage);
                }
            });
            
            // Función para cargar casos con paginación y filtros
            async function cargarCasos(page = 1) {
                // Mostrar indicador de carga
                loadingIndicator.classList.add('active');

                try {
                    // Construir URL con parámetros de filtro
                    let url = `/abogado/api/casos-con-paginacion?pagina=${page}&limite=${limit}`;

                    // Añadir filtros si están seleccionados
                    if (estadoFilter.value) url += `&estado=${estadoFilter.value}`;
                    if (tipoFilter.value) url += `&tipo=${tipoFilter.value}`;
                    if (busquedaInput.value.trim()) url += `&busqueda=${encodeURIComponent(busquedaInput.value.trim())}`;

                    console.log("URL de la API:", url);

                    // Obtener token para autorización
                    const token = obtenerTokenDeCookie();

                    // Realizar petición a la API
                    const response = await fetch(url, {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}`,
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();

                    console.log("Datos recibidos:", data);

                    // Actualizar la tabla con los resultados
                    renderizarCasos(data.casos);

                    // Actualizar contador de resultados
                    resultsCounter.textContent = `Mostrando ${data.casos.length} de ${data.paginacion.total} casos`;

                } catch (error) {
                    console.error('Error al cargar casos:', error);
                    casosTableBody.innerHTML = `
                        <tr>
                            <td colspan="6" style="text-align: center; color: red;">
                                Error al cargar los casos. Intente de nuevo más tarde.
                            </td>
                        </tr>
                    `;
                } finally {
                    // Ocultar indicador de carga
                    loadingIndicator.classList.remove('active');
                }
            }

            // Llama a cargarCasos después de inicializar las variables
            cargarCasos();
            
            // Agregar evento click para botones de detalle (delegación de eventos)
            $(document).on('click', '.btn-detalle', function() {
                const casoId = $(this).data('id');
                window.abrirDetalleCaso(casoId);
            });
        });
        
        function abrirDetalleCaso(casoId) {
            console.log('Botón de acciones clicado para el caso:', casoId);
            const overlay = document.getElementById('modalOverlay');
            const container = overlay.querySelector('.modal-container');
            overlay.classList.add('active');
            container.style.display = 'block';

            fetch(`/api/casos/${casoId}`)
                .then(response => {
                    if (!response.ok) throw new Error('Error al obtener los datos del caso');
                    return response.json();
                })
                .then(data => {
                    console.log('Datos del caso recibidos:', data);
                    document.getElementById('modalBody').innerHTML = `
                        <p><strong>Título:</strong> ${data.titulo}</p>
                        <p><strong>Descripción:</strong> ${data.descripcion}</p>
                        <p><strong>Tipo:</strong> ${data.tipo}</p>
                        <p><strong>Expediente:</strong> ${data.numeroExpediente}</p>
                        <p><strong>Estado:</strong> ${data.estado}</p>
                    `;
                })
                .catch(error => {
                    console.error('Error al obtener datos del caso:', error);
                    alert('Error al cargar los datos del caso.');
                    overlay.classList.remove('active');
                    container.style.display = 'none';
                });
        }

        function cerrarModal() {
            const overlay = document.getElementById('modalOverlay');
            const container = overlay.querySelector('.modal-container');
            overlay.classList.remove('active');
            container.style.display = 'none';
        }
    </script>
    
    <!-- Scripts comunes -->
    <%- include('./partials/scripts') %>
    
    <!-- Script para el modal de detalle de caso -->
    <script src="/js/detalleCasoModal.js"></script>
</body>
</html>
